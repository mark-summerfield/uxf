# TODO create py/t/makeuxf.py [size (default 1000)]
# use random with a fixed seed to generate a UXF string of "size" items
# spanning all 11 datatypes
# TODO create py/t/test_perf.py [size]
#   import makeuxf
#   uxt1 = makeuxf.make(size) # make size big enough to make > 1MB str
#   # loads time #1:
#   uxo1 = uxf.loads(uxt1)
#   # dumps time #2:
#   uxt2 = uxo1.dumps()
#   # verify
#   uxo2 = uxf.loads(uxt2)
#   if not eq.eq(uxo1, uxo2): ...
#   print(loads time and dumps time) # to provide a speed baseline
# Add to regression.py but with a smaller size so its target total time
# is 1-2 sec
# TODO update Py API docs to cover the Format class
# TODO review existing API docs to make sure they're accurate (e.g.,
# indent and wrap width, etc.)
# TODO update docs to mention eg/Config.py & py/eg/Tlm.py?
# TODO py/t/test_errors.py: go through all the error codes again to ensure
# all that are testable have tests
# TODO create test_visit.py: the visitor function should output
# everything visited to actual/vN.txt # (N=13 63 for t13.uxf t63.uxf)
# and then regression test against expected/vN.txt
# TODO review & improve README.md, py/README.md, and py/eg/README.md
# TODO code review & improvement
# TODO release py 1.0.0
# TODO py/uxfparser.py
# TODO UXF libraries:
#   - if I do an ANSI C implementation I'd need an insertion-ordered
#     hashtable algorithm:
#     https://troydhanson.github.io/uthash/userguide.html
#   - for .js use Dart or TypeScript or similar that can output JS?
#   - uxf.rs (including .tlm eg)
#   - uxf.cpp uxf.java uxf.rb ... ?

py/uxf.py
py/uxfconvert.py
py/uxflint.py
py/uxfparser.py
py/README.md
py/setup.py
py/pypi.sh
py/t/regression.py
py/t/test_table.py
py/t/test_sqlite.py
py/t/test_errors.py
py/t/test_lints.py
py/t/test_imports.py
py/t/test_merge.py
py/t/test_include.py
py/t/test_use_config.py
py/t/test_editabletuple.py
py/t/test_tlm.py
py/t/eq.py
py/eg/README.md
py/eg/visit.py
py/eg/slides1.py
py/eg/slides2.py
py/eg/slides.sld
py/eg/merge.py
py/eg/include.py
py/eg/Config.py
py/eg/Tlm.py

README.md

misc/epd2uxf.py
misc/md2html.sh

uxf.vim

st.sh

# NOTE IDEAS:
# - Documentation:
#   . Shorter README.md with shorter & pithier egs
#   . Complete manual with egs and use cases
#   . Uniform eXchange Format - a 7"x9" PDF book? (see paper notes)
# - Verification suite: create files (valid & invalid UXF etc) &
#   language/library-neutral scripts for validating a UXF processor's
#   conformance.
# - Experiment with using UXF format to store various kinds of data,
#   e.g., styled text (but see uxf2html notes), spreadsheet, graphics,
#   etc., & equivalents to other formats, e.g., geojson, etc.
# - Language: allow '.' in identifiers (excl. first char)?
# NOTE Rejected Ideas
# - Replace yes and no bools with built-in fieldless tables, (Y) (N)
# - Union types.

# vim: syn=yaml
