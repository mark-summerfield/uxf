# TODO Create the new egs (see below)
# TODO Create tests for the new egs (see below)
# TODO go through every uxf.py error code & try to make sure there's a
# matching test in test_errors.py
# TODO code review & improvement
# TODO release py 1.0.0
# TODO UXF libraries:
#   - for .js use Dart or TypeScript or similar that can output JS?
#   - uxf.rs uxf.cpp uxf.java uxf.rb ... ?

py/uxf.py
py/uxfconvert.py
py/README.md
py/ttype-test.uxf
py/setup.py
py/pypi.sh
py/t/regression.py
py/t/test_converters.py
py/t/test_sqlite.py
py/t/test_errors.py
py/t/test_lints.py
# TODO py/t/test_imports.py # add tests of system, local, and url
#			    # imports e.g. ttype-test (system),
#			    # eg/slides.sld (local),
#			    # http://www.qtrac.eu/ttype-eg.uxf (url)
# TODO py/t/test_include.py
# TODO py/t/test_on_error.py
# TODO py/t/test_merge.py
py/t/eq.py
py/eg/visit.py
py/eg/slides1.py
py/eg/slides2.py
py/eg/slides.sld
py/eg/include.py # TODO need test files
py/eg/merge.py # TODO implement & need test files
py/eg/on_error.py # TODO implement & need test files

README.md

misc/epd2uxf.py
misc/md2html.sh

uxf.vim

st.sh

# NOTE IDEAS:
# - Uniform eXchange Format - a 7"x9" PDF book? (see paper notes)
# - Experiment with using uxf format to store various kinds of data,
#   e.g., styled text, spreadsheet, graphics, etc.

# vim: syn=yaml
